from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery

import app.keyboards as kb
import app.database.requests as rq

router = Router()
photo = "AgACAgIAAxkBAAOIZvlMFm0Xd8jF36grKnma7KQe2vAAAs7eMRs78MlL8P4SWl9OhvgBAAMCAAN5AAM2BA"
start_caption = "–ü—Ä–∏–≤–µ—Ç! üëü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å\n–≤ –º–∞–≥–∞–∑–∏–Ω –∫—Ä–æ—Å—Å–æ–≤–æ–∫!\n–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–æ–¥–µ–ª–∏,\n–∏ –ª—É—á—à–∏–µ –±—Ä–µ–Ω–¥—ã.\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:"
last_brend = ""

@router.message(CommandStart())
async def cmd_start(message: Message):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await rq.set_user(message.from_user.id)
    await message.answer_photo(photo=photo, caption=start_caption, reply_markup=kb.main)

@router.callback_query(F.data == "back_1")
async def cmd_start(callback: CallbackQuery):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    await callback.message.edit_caption(caption=start_caption, reply_markup=kb.main)

@router.callback_query(F.data == 'catolog')
async def catalog(callback: CallbackQuery):
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä –±—Ä–µ–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫—Ä–æ—Å—Å–æ–≤–æ–∫
    await callback.message.edit_caption(caption='–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥', reply_markup=await kb.categories())

@router.callback_query(F.data == "back_2")
async def catalog(callback: CallbackQuery):
    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—Ä–µ–Ω–¥–æ–≤
    await callback.message.edit_caption(caption='–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥', reply_markup=await kb.categories())

@router.callback_query(F.data.startswith('category_'))
async def category(callback: CallbackQuery):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    global last_brend
    last_brend = callback.data.split('_')[1]
    await callback.message.edit_caption(caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä', reply_markup=await kb.items(last_brend))

@router.callback_query(F.data == 'back_3')
async def category(callback: CallbackQuery):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –≤—ã–±–æ—Ä—É —Ç–æ–≤–∞—Ä–æ–≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    await callback.message.edit_caption(caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä', reply_markup=await kb.items(last_brend))

@router.callback_query(F.data.startswith('item_'))
async def category(callback: CallbackQuery):
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–æ–≤–∞—Ä–µ
    item_data = await rq.get_item(callback.data.split('_')[1])
    await callback.message.edit_caption(caption=f'–ù–∞–∑–≤–∞–Ω–∏–µ: {item_data.name}\n–¶–µ–Ω–∞: {item_data.price}‚ÇΩ\n–û–ø–∏—Å–∞–Ω–∏–µ: {item_data.description}', reply_markup=kb.back_3)

@router.callback_query(F.data == 'description')
async def description(callback: CallbackQuery):
    # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞
    await callback.message.edit_caption(caption='üëü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ –∫—Ä–æ—Å—Å–æ–≤–æ–∫!\n–ù–∞—à –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å, —á—Ç–æ–±—ã —É–ø—Ä–æ—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–±–æ—Ä–∞ –∏ –ø–æ–∫—É–ø–∫–∏ –∫—Ä–æ—Å—Å–æ–≤–æ–∫.\n–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:\n- üåü –ü—Ä–æ—Å–º–æ—Ç—Ä –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞: –£–∑–Ω–∞–π—Ç–µ –æ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è—Ö –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö.\n- üõí –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: –£–∑–Ω–∞–≤–∞–π—Ç–µ —Ü–µ–Ω—ã, —Ä–∞–∑–º–µ—Ä—ã –∏ –Ω–∞–ª–∏—á–∏–µ.\n- üéØ –ü—Ä–æ—Å—Ç–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è: –õ–µ–≥–∫–æ –Ω–∞—Ö–æ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.\n–ü–æ–∫–∞ –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–æ–≤–∞—Ä–∞—Ö, –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –æ–±—É–≤–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É! –ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ –∏ –±—É–¥—å—Ç–µ –≤—Å–µ–≥–¥–∞ –≤ —Ç—Ä–µ–Ω–¥–µ!', reply_markup=kb.description_kb) 

@router.callback_query(F.data == 'contact')
async def contact(callback: CallbackQuery):
    # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–≤—è–∑–∏
    await callback.message.edit_caption(caption="–ö–æ–Ω—Ç–∞–∫—Ç—ã\n \nüìû –°–≤—è–∑—å —Å –Ω–∞–º–∏, —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ:\n @DeKuNe_tyan", reply_markup=kb.contact_kb)

